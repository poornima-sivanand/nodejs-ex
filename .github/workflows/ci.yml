name: Build Container
on: 
  pull_request:
    types: [opened]
  issue_comment:
    types: [created] # Monday at 4AM
defaults:
  run:
    working-directory: ./
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '@deploy'
      - run: 'echo Found it!'
        if: steps.check.outputs.triggered == 'true'

  ocp-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2  
      - name: list current files
        run: echo ${GITHUB_WORKSPACE}
      - name: list current files
        run: pwd
      - name: list current files
        run: ls 
      - name: Image Build
        # if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/master'
        uses: redhat-developer/openshift-actions@v2.1.0
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          version: 4.3
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL}}
          parameters: '{"apitoken": "${{ secrets.API_TOKEN }}", "acceptUntrustedCerts": "true"}'
          cmd: |
            'version'
            'apply -f ./openshift/build.json'
            
      - name: Image Deploy
        # if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/master'
        uses: redhat-developer/openshift-actions@v2.1.0
        with:
          version: 4.3
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL}}
          parameters: '{"apitoken": "${{ secrets.API_TOKEN }}", "acceptUntrustedCerts": "true"}'
          cmd: |
            'version'
            'apply -f ./openshift/deploy.json'
      
      # - name: Additional Tag
      #   if: github.event_name != 'schedule' && github.ref == 'refs/heads/master'
      #   uses: redhat-developer/openshift-actions@v1.1
      #   with:
      #     version: "latest"
      #     openshift_server_url: ${{ secrets.OpenShiftServerURL}}
      #     parameters: '{"apitoken": "${{ secrets.OpenShiftToken }}", "acceptUntrustedCerts": "true"}'
      #     cmd: |
      #       'version'
      #       'tag -n bcgov-tools bcgov-tools/patroni-postgres:12.4-latest bcgov-tools/patroni-postgres:12.4-${{ github.event.inputs.version }}'
